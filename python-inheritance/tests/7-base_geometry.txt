Test for Integer validator
==========================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("width", 20)

>>> bg.integer_validator("width", "height")
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("width", 5)
Traceback (most recent call last):
...
ValueError: width must be greater than 5

>>> bg.integer_validator("width", -10)
Traceback (most recent call last):
...
ValueError: width must be greater than 0

>>> bg.integer_validator("width")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("width", [8])
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("width", (3, 9))
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("width", True)
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("width", {4, 10})
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator("width", None)
Traceback (most recent call last):
...
TypeError: width must be an integer

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
