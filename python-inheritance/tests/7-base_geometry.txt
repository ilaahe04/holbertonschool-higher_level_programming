==========================
Test for Integer validator
==========================


>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


>>> bg = BaseGeometry()

>>> bg.integer_validator("height", 10)

>>> bg.integer_validator("height", "width")
Traceback (most recent call last):
...
TypeError: height must be an integer

>>> bg.integer_validator("height", 0)
Traceback (most recent call last):
...
ValueError: height must be greater than 0

>>> bg.integer_validator("height", -5)
Traceback (most recent call last):
...
ValueError: height must be greater than 0

>>> bg.integer_validator("height")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("height", [5])
Traceback (most recent call last):
...
TypeError: height must be an integer

>>> bg.integer_validator("height", (1, 2))
Traceback (most recent call last):
...
TypeError: height must be an integer

>>> bg.integer_validator("height", True)
Traceback (most recent call last):
...
TypeError: height must be an integer

>>> bg.integer_validator("height", {1, 2})
Traceback (most recent call last):
...
TypeError: height must be an integer

>>> bg.integer_validator("height", None)
Traceback (most recent call last):
...
TypeError: height must be an integer

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
