Test for Integer validator
==========================

>>> BaseGeometry = __import__('base_geometry_7_10').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("age", 2.0)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", 10)  # Added a valid integer value here

>>> bg.integer_validator("age", float("inf"))
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", {1, 2})
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", [1, 2])
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", "text")
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", (1, 2))
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", 1)
Traceback (most recent call last):
...
TypeError: age must be greater than 0

>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
